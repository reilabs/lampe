-- Generated by lampe

import «Merkle-0.0.0».Extracted.GeneratedTypes
import Lampe

open Lampe

namespace «Merkle-0.0.0»
namespace Extracted

nr_def «utils»::«bits»::«to_le_bits»<>(self : Field) -> [u1; 256] {
    let mut val = self;
    let mut bits = [0 : u1 ; 256];
    for i in 0 : u32 .. 256 : u32 {
            bits[#cast(i) : u32] = (@utils::sgn0<> as λ(Field) → u1)(val);
        if #uEq(#arrayIndex(bits, #cast(i) : u32) : u1, 0 : u1) : bool {
                val = #fDiv(val, 2 : Field) : Field;
            skip;
        } else {
                val = #fDiv(#fSub(val, 1 : Field) : Field, 2 : Field) : Field;
            skip;
        };
    };
    bits;
}


def Utils.Bits.Mod.env := Lampe.Env.mk [«utils::bits::to_le_bits»] []