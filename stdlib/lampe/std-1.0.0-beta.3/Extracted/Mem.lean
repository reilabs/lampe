-- Generated by lampe

import «std-1.0.0-beta.3».Extracted.GeneratedTypes
import Lampe

open Lampe

namespace «std-1.0.0-beta.3»
namespace Extracted

noir_def mem::zeroed<T: Type>() -> T := {
  (#_zeroed returning T)()
}

noir_def mem::checked_transmute<T: Type, U: Type>(value: T) -> U := {
  (#_checked_transmute returning U)(value)
}

noir_def mem::array_refcount<T: Type, N: u32>(array: Array<T, N: u32>) -> u32 := {
  (#_array_refcount returning u32)(array)
}

noir_def mem::slice_refcount<T: Type>(slice: Slice<T>) -> u32 := {
  (#_slice_refcount returning u32)(slice)
}


def Mem.env : Env := Env.mk
  [«mem::zeroed», «mem::checked_transmute», «mem::array_refcount», «mem::slice_refcount»]
  []
