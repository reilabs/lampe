-- Generated by lampe

import «std-1.0.0-beta.12».Extracted.GeneratedTypes
import Lampe

open Lampe

noir_trait_impl[«std-1.0.0-beta.12».impl_315]<T: Type> «std-1.0.0-beta.12»::append::Append<> for Slice<T> where [] := {
  noir_def empty<>() -> Slice<T> := {
    (#_mkSlice returning Slice<T>)()
  };
  
  noir_def append<>(self: Slice<T>, other: Slice<T>) -> Slice<T> := {
    («std-1.0.0-beta.12»::slice::append<T> as λ(Slice<T>, Slice<T>) -> Slice<T>)(self, other)
  };
}

def «std-1.0.0-beta.12».Append.env : Env := Env.mk
  []
  [«std-1.0.0-beta.12».impl_315]
