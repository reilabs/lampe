-- Generated by lampe

import «std-0.0.0».Extracted.GeneratedTypes
import Lampe

open Lampe

namespace «std-0.0.0»
namespace Extracted

nr_def «mem»::«zeroed»<T>() -> T {
    #zeroed() : T
}

nr_def «mem»::«checked_transmute»<T, U>(value : T) -> U {
    #xcheckedTransmute(value) : U
}

nr_def «mem»::«array_refcount»<T, @N : u32>(array : [T; N]) -> u32 {
    #arrayRefcount(array) : u32
}

nr_def «mem»::«slice_refcount»<T>(slice : [T]) -> u32 {
    #sliceRefcount(slice) : u32
}


def Mem.env := Lampe.Env.mk [«mem::array_refcount», «mem::checked_transmute», «mem::slice_refcount», «mem::zeroed»] []