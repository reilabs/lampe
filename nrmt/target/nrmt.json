{"noir_version":"0.31.0+540bef3597bd3e5775c83ec2ee3c0d4463084b4c","hash":1701939372299129255,"abi":{"parameters":[{"name":"x","type":{"kind":"field"},"visibility":"private"},{"name":"y","type":{"kind":"field"},"visibility":"public"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/7VUSQ7DIAyEhKa99ic2SzC3fqWo5P8vqBopUCHCLWYkZIQlMx4vUhxQ+7mJM+ZsX9kaWK1NXic0+AYdIjmwLq6EhI7cR5MxiSz5EIOHgNYk3FwwGxyoY8E1oGTkNfHxgqKj7OgpGz3hGpCTt2zqfuLPRXqUEPOAuIq5+UfkrfhrBGJg0yrB27Sq4Vnfe0P4f7xnu3R8BY/9TPn+ZRa4bNd685a/VOVfKi6SnwvW+fYm/9nR5wcPIDK6OgYAAA==","debug_symbols":"lZBBCoMwEEXv8tdZWE0p5CqllFFjCYSJmFiQ4N2dKB4gu3nz/9v8jNH26+/reAoR5p3hw0DJBRbKaM5XnIkLxURLgnm2WsHyKFfX7AqT8xZGv/aPwqNWaGuFrlbQdYLAnxZHvbdlgpKtPNyLCKZtvhLpHg==","file_map":{"47":{"source":"trait BinaryHasher<F> {\n    fn hash(a: F, b: F) -> F;\n}\n\npub fn mtree_recover<H>(idx: [bool], p: [Field], item: Field) -> Field\n    where H: BinaryHasher<Field>\n{\n    assert(idx.len() == p.len());\n    let mut curr_h = item;\n    for i in 0..idx.len() {\n        let dir = idx[i];\n        let sibling_root = p[i];\n        if dir {\n            curr_h = H::hash(sibling_root, curr_h);\n        } else {\n            curr_h = H::hash(curr_h, sibling_root);\n        }\n    }\n    curr_h\n}\n\nfn main(x: Field, y: pub Field) {\n    assert(x != y);\n}\n\n#[test]\nfn test_main() {\n    main(1, 2);\n\n    // Uncomment to make test fail\n    // main(1, 1);\n}\n","path":"/Users/marcinkostrzewa/code/lampe/nrmt/src/main.nr"}},"names":["main"]}