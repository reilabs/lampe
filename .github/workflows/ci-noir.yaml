name: CI - Check on Noir test programs
on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  run-tests:
    name: "Test Noir"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Noir repo
        uses: actions/checkout@v5
        with:
          repository: noir-lang/noir
          ref: 9a5b3695b42e391fa27c48e87b9bbb07523d664d
          path: noir
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.85.1
          components: rustfmt, clippy
      - name: Build (cargo)
        working-directory: noir
        run: cargo build --package nargo_cli --release
      - name: Install nargo CLI
        working-directory: noir
        run: cp ./target/release/nargo /usr/local/bin/
      - name: Ensure test programs up-to-date
        working-directory: noir/test_programs
        run: ./rebuild.sh
      - name: Checkout Lampe repo
        uses: actions/checkout@v5
        with:
          path: lampe
      - name: Install xonsh
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -yq python3 pipx
          pipx install 'xonsh[full]'
      - name: Install xonsh (python) dependencies
        run: xonsh -c 'xpip install -r lampe/scripts/requirements.txt'
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.85.0
          components: rustfmt, clippy
      - name: Build (cargo)
        working-directory: lampe
        run: cargo build --release
      - name: Install (cargo)
        working-directory: lampe
        run: cargo install --path .
      - name: Set up Lean 4
        uses: leanprover/lean-action@v1
        with:
          auto-config: false
          build: false
          test: false
          lint: false
          use-mathlib-cache: true
          lake-package-directory: lampe/Lampe
      - name: Run Lampe on each test_program
        working-directory: lampe/testing_noir
        run: ./test.xsh --noir-path ${{ github.workspace }}/noir --log-stdout
