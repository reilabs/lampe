-- Generated by lampe

import «ExtractionTests-0.0.0».Extracted.GeneratedTypes
import Lampe

open Lampe

namespace «ExtractionTests-0.0.0»
namespace Extracted

noir_def patterns::Option2::some<T: Type>(value: T) -> patterns::Option2<T> := {
  (#_makeData returning patterns::Option2<T>)(#_true, value)
}

noir_def patterns::pattern_test<>() -> Unit := {
  let (opt: patterns::Option2<bool>) = (patterns::Option2::some<bool> as λ(bool) -> patterns::Option2<bool>)(#_true);
  let (t: Tuple<Field, patterns::Option2<bool>, Field>) = (#_makeData returning Tuple<Field, patterns::Option2<bool>, Field>)((1: Field), opt, (3: Field));
  let ((_x: Field), ((_: bool), (_: bool)), mut (_z: Field)) = t;
  #_skip
}


def Patterns.env : Env := Env.mk
  [«patterns::Option2::some», «patterns::pattern_test»]
  []
