-- Generated by lampe

import «skyscraper-0.0.0».Extracted.GeneratedTypes
import Lampe

open Lampe

noir_def «skyscraper-0.0.0»::permute::permute<>(s: Array<Field, 2: u32>) -> Array<Field, 2: u32> := {
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_arrayIndex returning Field)(s, (0: u32)), (#_arrayIndex returning Field)(s, (1: u32)));
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::components::square<> as λ(Field) -> Field)(l)), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::components::square<> as λ(Field) -> Field)(l)), (#_arrayIndex returning Field)((«skyscraper-0.0.0»::globals::RC<> as λ() -> Array<Field, 8: u32>)(), (0: u32))), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::bar::bar<> as λ(Field) -> Field)(l)), (#_arrayIndex returning Field)((«skyscraper-0.0.0»::globals::RC<> as λ() -> Array<Field, 8: u32>)(), (1: u32))), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::bar::bar<> as λ(Field) -> Field)(l)), (#_arrayIndex returning Field)((«skyscraper-0.0.0»::globals::RC<> as λ() -> Array<Field, 8: u32>)(), (2: u32))), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::components::square<> as λ(Field) -> Field)(l)), (#_arrayIndex returning Field)((«skyscraper-0.0.0»::globals::RC<> as λ() -> Array<Field, 8: u32>)(), (3: u32))), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::components::square<> as λ(Field) -> Field)(l)), (#_arrayIndex returning Field)((«skyscraper-0.0.0»::globals::RC<> as λ() -> Array<Field, 8: u32>)(), (4: u32))), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::bar::bar<> as λ(Field) -> Field)(l)), (#_arrayIndex returning Field)((«skyscraper-0.0.0»::globals::RC<> as λ() -> Array<Field, 8: u32>)(), (5: u32))), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::bar::bar<> as λ(Field) -> Field)(l)), (#_arrayIndex returning Field)((«skyscraper-0.0.0»::globals::RC<> as λ() -> Array<Field, 8: u32>)(), (6: u32))), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::components::square<> as λ(Field) -> Field)(l)), (#_arrayIndex returning Field)((«skyscraper-0.0.0»::globals::RC<> as λ() -> Array<Field, 8: u32>)(), (7: u32))), l);
  let (l, r) = (#_makeData returning Tuple<Field, Field>)((#_fAdd returning Field)(r, («skyscraper-0.0.0»::components::square<> as λ(Field) -> Field)(l)), l);
  (#_mkArray returning Array<Field, 2: u32>)(l, r)
}

def «skyscraper-0.0.0».Permute.env : Env := Env.mk
  [«skyscraper-0.0.0::permute::permute»]
  []
